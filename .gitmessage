

# Git Commit Guidelines
# =====================
#
# Each commit message consists of a header, a body and a footer. The header has
# a special format that includes a type, a scope and a subject:
#
# <type>(<scope>): <subject>
# <BLANK LINE>
# <body>
# <BLANK LINE>
# <footer>
#
# The header is mandatory and the scope of the header is optional.
#
# Any line of the commit message cannot be longer 100 characters! This allows
# the message to be easier to read on GitHub as well as in various git tools.
#
# Revert
# ======
#
# If the commit reverts a previous commit, it should begin with `revert: `,
# followed by the header of the reverted commit. In the body it should say:
# `This reverts commit <hash>.`, where the hash is the SHA of the commit being
# reverted.
#
# Type
# ====
#
# - build: Changes that affect the build system or external dependencies
#   (example scopes: gulp, broccoli, npm)
# - ci: Changes to our CI configuration files and scripts (example scopes:
#   Travis, Circle, BrowserStack, SauceLabs)
# - docs: Documentation only changes
# - feat: A new feature
# - fix: A bug fix
# - perf: A code change that improves performance
# - refactor: A code change that neither fixes a bug or adds a feature
# - style: Changes that do not affect the meaning of the code (white-space,
#   formatting, missing semi-colons, etc)
# - test: Adding missing tests
#
# Scope
# =====
#
# The scope could be anything specifying place of the commit change.
#
# For example $location, $browser, $compile, $rootScope, ngHref, ngClick,
# ngView, etc...
#
# Subject
# =======
#
# The subject contains a succinct description of the change:
#
# - use the imperative, present tense: "change" not "changed" nor "changes"
# - don't capitalize the first letter
# - no dot (.) at the end
#
# Body
# ====
#
# Just as in the **subject**, use the imperative, present tense: "change" not
# "changed" nor "changes". The body should include the motivation for the change
# and contrast this with previous behavior.
#
# Footer
# ======
#
# The footer should contain any information about Breaking Changes and is also
# the place to reference GitHub issues that this commit Closes.
#
# Breaking Changes should start with the word BREAKING CHANGE: with a space or
# two newlines. The rest of the commit message is then used for this.
#
# original documentation:
# https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit
