#!/usr/bin/env bash
# shellcheck disable=SC2029
# A quick & dirty script to setup a MySQL slave thanks to Percona Xtrabackup
# https://www.percona.com/doc/percona-xtrabackup/2.4/howtos/setting_up_replication.html

set -o errexit
set -o pipefail
set -o nounset

MYSQL_MASTER_USER=${MYSQL_MASTER_USER:='replication'}
MYSQL_MASTER_PASSWORD=${MYSQL_MASTER_PASSWORD:=''}
MYSQL_MASTER_IP=${MYSQL_MASTER_IP:='172.16.0.1'}
MYSQL_DATADIR=${MYSQL_DATADIR:='/var/lib/mysql'}

SLAVE_SSH_USER=${SLAVE_SSH_USER:=$(whoami)}
SLAVE_IP=${SLAVE_IP:='172.16.0.2'}

readonly BACKUP_DESTINATION="/var/tmp/${SLAVE_SSH_USER}/mysql.$$"
readonly MYSQL_SETUP_SLAVE_SQL="/var/tmp/setup_slave.$$.sql"
readonly NPROC=$(grep -c processor </proc/cpuinfo || 4)

if ! command -v qpress &>/dev/NULL ||
  ! command -v xbstream &>/dev/null ||
  ! command -v xtrabackup &>/dev/null; then
  echo >&2 "qpress, xbstream or xtrabackup aren't installed or in PATH"
  exit 1
fi

if ! ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" "mkdir -p ${BACKUP_DESTINATION}"; then
  echo >&2 "Can't connect to slave via SSH"
  exit 1
fi

if ! ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" "command -v qpress" ||
  ! ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" "command -v xbstream" ||
  ! ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" "command -v xtrabackup"; then
  echo >&2 "qpress, xbstream or xtrabackup aren't installed or in PATH on the slave"
  exit 1
fi

ulimit -n 65536
xtrabackup \
  --backup \
  --compress \
  --compress-threads="$((NPROC / 2))" \
  --parallel="$((NPROC / 2))" \
  --slave-info \
  --stream=xbstream \
  --target-dir=./ |
  ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" \
    "xbstream -x -C ${BACKUP_DESTINATION}"

# shellcheck disable=SC2181
if [[ $? -ne 0 ]]; then
  echo >&2 "xtrabackup command failed"
  exit 1
fi

ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" \
  "xtrabackup --remove-original --decompress \
    --parallel=\$(grep -c processor < /proc/cpuinfo || 4) \
    --target-dir=${BACKUP_DESTINATION}"
ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" \
  "xtrabackup --prepare --target-dir=${BACKUP_DESTINATION}"
ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" "sudo service mysql stop"
ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" "sudo chown -R mysql:mysql ${BACKUP_DESTINATION}"
ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" "sudo mkdir -m 0755 -p ${MYSQL_DATADIR}"
ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" "sudo mv ${MYSQL_DATADIR} ${MYSQL_DATADIR}.$$ || true"
ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" "sudo mv ${BACKUP_DESTINATION} ${MYSQL_DATADIR}"
ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" "sudo service mysql start"

MYSQL_MASTER_LOG_FILE=$(ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" \
  "sudo cat ${MYSQL_DATADIR}/xtrabackup_binlog_info | awk '{ print \$1; }'")
MYSQL_MASTER_LOG_POS=$(ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" \
  "sudo cat ${MYSQL_DATADIR}/xtrabackup_binlog_info | awk '{ print \$2; }'")

MYSQL_SETUP_SLAVE_QUERY="STOP SLAVE;
CHANGE MASTER TO
MASTER_HOST='${MYSQL_MASTER_IP}',
MASTER_USER='${MYSQL_MASTER_USER}',
MASTER_PASSWORD='${MYSQL_MASTER_PASSWORD}',
MASTER_LOG_FILE='${MYSQL_MASTER_LOG_FILE}',
MASTER_LOG_POS=${MYSQL_MASTER_LOG_POS};
START SLAVE;"

echo "${MYSQL_SETUP_SLAVE_QUERY}" >"${MYSQL_SETUP_SLAVE_SQL}"
scp "$MYSQL_SETUP_SLAVE_SQL" \
  "${SLAVE_SSH_USER}@${SLAVE_IP}:${MYSQL_SETUP_SLAVE_SQL}"

# Use sudo to make sure we use the right ~/.my.cnf file with maintenance
# credentials
ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" \
  "sudo mysql -e 'SOURCE ${MYSQL_SETUP_SLAVE_SQL};'"

ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" 'sudo mysqladmin start-slave'
ssh "${SLAVE_SSH_USER}@${SLAVE_IP}" "sudo chown -R mysql:mysql ${MYSQL_DATADIR}"
